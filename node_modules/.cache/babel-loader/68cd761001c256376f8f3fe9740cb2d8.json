{"ast":null,"code":"import { myFirebase } from \"../firebase/firebase\";\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\"; // requesting to login\n\nconst requestLogin = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n}; // successful login\n\n\nconst receiveLogin = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  };\n}; //failure login\n\n\nconst loginError = () => {\n  return {\n    type: LOGIN_FAILURE\n  };\n};\n\nconst requestLogout = () => {\n  return {\n    type: LOGOUT_REQUEST\n  };\n};\n\nconst receiveLogout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\nconst logoutError = () => {\n  return {\n    type: LOGOUT_FAILURE\n  };\n};\n\nconst verifyRequest = () => {\n  return {\n    type: VERIFY_REQUEST\n  };\n};\n\nconst verifySuccess = () => {\n  return {\n    type: VERIFY_SUCCESS\n  };\n};\n\nexport const loginUser = (email, password) => dispatch => {\n  dispatch(requestLogin());\n  myFirebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n    dispatch(receiveLogin(user));\n  }).catch(error => {\n    //Do something with the error if you want!\n    dispatch(loginError());\n  });\n};\nexport const logoutUser = () => dispatch => {\n  dispatch(requestLogout());\n  myFirebase.auth().signOut().then(() => {\n    dispatch(receiveLogout());\n  }).catch(error => {\n    //Do something with the error if you want!\n    dispatch(logoutError());\n  });\n};","map":{"version":3,"sources":["/home/sreeha/Projects/capstone/farmerbidder/src/actions/auth.js"],"names":["myFirebase","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","requestLogin","type","receiveLogin","user","loginError","requestLogout","receiveLogout","logoutError","verifyRequest","verifySuccess","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut"],"mappings":"AAAA,SAASA,UAAT,QAA2B,sBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AACA,MAAMC,YAAY,GAAG,MAAM;AACvB,SAAO;AACLC,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJH,C,CAME;;;AACA,MAAMU,YAAY,GAAGC,IAAI,IAAI;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER,aADD;AAELU,IAAAA;AAFK,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB,SAAO;AACLH,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CAJD;;AAMF,MAAMW,aAAa,GAAG,MAAM;AACxB,SAAO;AACLJ,IAAAA,IAAI,EAAEN;AADD,GAAP;AAGD,CAJH;;AAME,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLL,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,WAAW,GAAG,MAAM;AACxB,SAAO;AACLN,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLP,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLR,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAMW,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBC,QAAQ,IAAI;AACxDA,EAAAA,QAAQ,CAACb,YAAY,EAAb,CAAR;AACAT,EAAAA,UAAU,CACPuB,IADH,GAEGC,0BAFH,CAE8BJ,KAF9B,EAEqCC,QAFrC,EAGGI,IAHH,CAGQb,IAAI,IAAI;AACZU,IAAAA,QAAQ,CAACX,YAAY,CAACC,IAAD,CAAb,CAAR;AACD,GALH,EAMGc,KANH,CAMSC,KAAK,IAAI;AACd;AACAL,IAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACD,GATH;AAUC,CAZI;AAcL,OAAO,MAAMe,UAAU,GAAG,MAAMN,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAd,EAAAA,UAAU,CACTuB,IADD,GAECM,OAFD,GAGCJ,IAHD,CAGM,MAAM;AACVH,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD,GALD,EAMCW,KAND,CAMOC,KAAK,IAAI;AACd;AACAL,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACD,GATD;AAUK,CAZM","sourcesContent":["import { myFirebase } from \"../firebase/firebase\";\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\n// requesting to login\nconst requestLogin = () => {\n    return {\n      type: LOGIN_REQUEST\n    };\n  };\n\n  // successful login\n  const receiveLogin = user => {\n    return {\n      type: LOGIN_SUCCESS,\n      user\n    };\n  };\n\n  //failure login\n  const loginError = () => {\n    return {\n      type: LOGIN_FAILURE\n    };\n  };\n\nconst requestLogout = () => {\n    return {\n      type: LOGOUT_REQUEST\n    };\n  };\n  \n  const receiveLogout = () => {\n    return {\n      type: LOGOUT_SUCCESS\n    };\n  };\n  \n  const logoutError = () => {\n    return {\n      type: LOGOUT_FAILURE\n    };\n  };\n  \n  const verifyRequest = () => {\n    return {\n      type: VERIFY_REQUEST\n    };\n  };\n  \n  const verifySuccess = () => {\n    return {\n      type: VERIFY_SUCCESS\n    };\n  };\n  \n  export const loginUser = (email, password) => dispatch => {\n    dispatch(requestLogin());\n    myFirebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(user => {\n        dispatch(receiveLogin(user));\n      })\n      .catch(error => {\n        //Do something with the error if you want!\n        dispatch(loginError());\n      })\n    }\n\n    export const logoutUser = () => dispatch => {\ndispatch(requestLogout());\nmyFirebase\n.auth()\n.signOut()\n.then(() => {\n  dispatch(receiveLogout());\n})\n.catch(error => {\n  //Do something with the error if you want!\n  dispatch(logoutError());\n});\n    }"]},"metadata":{},"sourceType":"module"}